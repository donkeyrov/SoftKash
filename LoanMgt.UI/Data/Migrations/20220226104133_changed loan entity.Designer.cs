// <auto-generated />
using System;
using LoanMgt.UI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanMgt.UI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220226104133_changed loan entity")]
    partial class changedloanentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoanMgt.SHARED.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Credit")
                        .HasColumnType("real");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<float>("Debit")
                        .HasColumnType("real");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LoanMgt.SHARED.AccountSettings", b =>
                {
                    b.Property<int>("AccountSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountSettingsId"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaysInMonthInterestCalculation")
                        .HasColumnType("int");

                    b.Property<int>("DaysInYearInterestCalculation")
                        .HasColumnType("int");

                    b.Property<bool>("LoansDueToday")
                        .HasColumnType("bit");

                    b.Property<bool>("LoansExpiringtoday")
                        .HasColumnType("bit");

                    b.Property<bool>("LoansPastMaturityDate")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("MonthlyLoanRepaymentCycle")
                        .HasColumnType("int");

                    b.Property<bool>("NewLoansAdded")
                        .HasColumnType("bit");

                    b.Property<bool>("NewRepaymentsAdded")
                        .HasColumnType("bit");

                    b.Property<int>("YearlyLoanRepaymentCycle")
                        .HasColumnType("int");

                    b.HasKey("AccountSettingsId");

                    b.ToTable("AccountSettings");
                });

            modelBuilder.Entity("LoanMgt.SHARED.AccountType", b =>
                {
                    b.Property<int>("AccountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountTypeId"), 1L, 1);

                    b.Property<bool>("BalanceSheetAccount")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Credit")
                        .HasColumnType("bit");

                    b.Property<bool>("Debit")
                        .HasColumnType("bit");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountTypeId");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("LoanMgt.SHARED.AssetManagementType", b =>
                {
                    b.Property<int>("AssetManagementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetManagementTypeId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetManagementTypeId");

                    b.ToTable("AssetManagementTypes");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BankBranch", b =>
                {
                    b.Property<int>("BankBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankBranchId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.HasKey("BankBranchId");

                    b.ToTable("BankBranches");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Borrower", b =>
                {
                    b.Property<int>("BorrowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowerId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("CreditScore")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LandLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BorrowerId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TitleId");

                    b.HasIndex("TownId");

                    b.HasIndex("WorkingStatusId");

                    b.ToTable("Borrowers");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BorrowerFile", b =>
                {
                    b.Property<int>("BorrowerFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowerFileId"), 1L, 1);

                    b.Property<string>("ActualFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorrowerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BorrowerFileId");

                    b.HasIndex("BorrowerId");

                    b.ToTable("BorrowerFiles");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BorrowerGroup", b =>
                {
                    b.Property<int>("BorrowerGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowerGroupId"), 1L, 1);

                    b.Property<int>("BorrowerId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("BorrowerGroupId");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("GroupId");

                    b.ToTable("BorrowerGroups");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MaxInterestRate")
                        .HasColumnType("real");

                    b.Property<float>("MaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<float>("MinInterestRate")
                        .HasColumnType("real");

                    b.Property<float>("MinLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.HasKey("BranchId");

                    b.HasIndex("TownId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BranchHoliday", b =>
                {
                    b.Property<int>("BranchHolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchHolidayId"), 1L, 1);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FridayBranchHoliday")
                        .HasColumnType("bit");

                    b.Property<string>("HolidayDates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NextDayThatIsNotHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("NextRepaymentCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("SaturdayBranchHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("SundayBranchHoliday")
                        .HasColumnType("bit");

                    b.HasKey("BranchHolidayId");

                    b.HasIndex("BranchId");

                    b.ToTable("BranchHolidays");
                });

            modelBuilder.Entity("LoanMgt.SHARED.CollateralType", b =>
                {
                    b.Property<int>("CollateralTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollateralTypeId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollateralTypeId");

                    b.ToTable("CollateralTypes");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Collector", b =>
                {
                    b.Property<int>("CollectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollectorId"), 1L, 1);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollectorId");

                    b.HasIndex("BranchId");

                    b.ToTable("Collectors");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("LoanMgt.SHARED.DisbursementMethod", b =>
                {
                    b.Property<int>("DisbursementMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisbursementMethodId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DisbursementMethodId");

                    b.ToTable("DisbursementMethod");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Fee", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeeId"), 1L, 1);

                    b.Property<bool>("CalculateOnDueInterestamount")
                        .HasColumnType("bit");

                    b.Property<bool>("CalculateOnDuePricipalAndInterest")
                        .HasColumnType("bit");

                    b.Property<bool>("CalculateOnDuePrincipalAmount")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeductFromPrincipalAmount")
                        .HasColumnType("bit");

                    b.Property<bool>("Fixedamount")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PercentageBased")
                        .HasColumnType("bit");

                    b.HasKey("FeeId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<string>("CollectorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("MeetingSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("GroupLeaderId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Guarantor", b =>
                {
                    b.Property<int>("GuarantorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuarantorId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LandLinePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuarantorId");

                    b.ToTable("Guarantors");
                });

            modelBuilder.Entity("LoanMgt.SHARED.GuarantorFile", b =>
                {
                    b.Property<int>("GuarantorFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuarantorFileId"), 1L, 1);

                    b.Property<string>("ActualFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuarantorId")
                        .HasColumnType("int");

                    b.HasKey("GuarantorFileId");

                    b.ToTable("GuarantorFiles");
                });

            modelBuilder.Entity("LoanMgt.SHARED.InterestMethod", b =>
                {
                    b.Property<int>("InterestMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestMethodId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestMethodId");

                    b.ToTable("interestMethods");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"), 1L, 1);

                    b.Property<bool>("AddAutomaticPayments")
                        .HasColumnType("bit");

                    b.Property<bool>("AdjustFirstRepayment")
                        .HasColumnType("bit");

                    b.Property<int>("ApproverStage")
                        .HasColumnType("int");

                    b.Property<int>("BorrowerId")
                        .HasColumnType("int");

                    b.Property<bool>("CalculateFirstRePaymentProRata")
                        .HasColumnType("bit");

                    b.Property<string>("CalculateInterestOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DDurationAfterMaturity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisbursementMethodId")
                        .HasColumnType("int");

                    b.Property<bool>("DoNotAdjustRemainingPayments")
                        .HasColumnType("bit");

                    b.Property<bool>("ExttendAfterMaturity")
                        .HasColumnType("bit");

                    b.Property<string>("FirstApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirstApproverDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FirstRePaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("FirstRepaymentAmount")
                        .HasColumnType("real");

                    b.Property<bool>("InterestFixedAmount")
                        .HasColumnType("bit");

                    b.Property<bool>("InterestIsFixedAmountPerCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("InterestIsPercentageBased")
                        .HasColumnType("bit");

                    b.Property<int>("InterestMethodId")
                        .HasColumnType("int");

                    b.Property<bool>("InterestPercentageBased")
                        .HasColumnType("bit");

                    b.Property<float>("InterestRateAfterMaturity")
                        .HasColumnType("real");

                    b.Property<DateTime>("InterestStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanDurationId")
                        .HasColumnType("int");

                    b.Property<int>("LoanInterestPeriodId")
                        .HasColumnType("int");

                    b.Property<float>("LoanInterestRate")
                        .HasColumnType("real");

                    b.Property<string>("LoanNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanPeriod")
                        .HasColumnType("int");

                    b.Property<int>("LoanProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LoanTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfRePayments")
                        .HasColumnType("int");

                    b.Property<bool>("OverrideMaturityDate")
                        .HasColumnType("bit");

                    b.Property<bool>("OverrideRepaymentAmount")
                        .HasColumnType("bit");

                    b.Property<float>("PrincipalAmount")
                        .HasColumnType("real");

                    b.Property<int>("RecurringPeriodAfterMaturity")
                        .HasColumnType("int");

                    b.Property<int>("RepaymentCycleId")
                        .HasColumnType("int");

                    b.Property<string>("SecondApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SecondApproverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThirdApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThirdApproverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeToPostBetween")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("lastRepaymentAmount")
                        .HasColumnType("real");

                    b.HasKey("LoanId");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("DisbursementMethodId");

                    b.HasIndex("InterestMethodId");

                    b.HasIndex("LoanDurationId");

                    b.HasIndex("LoanProductId");

                    b.HasIndex("LoanStatusId");

                    b.HasIndex("RepaymentCycleId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanDuration", b =>
                {
                    b.Property<int>("LoanDurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanDurationId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanDurationId");

                    b.ToTable("LoanDurations");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanFee", b =>
                {
                    b.Property<int>("LoanFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanFeeId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeeId")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("LoanFeeId");

                    b.ToTable("LoanFees");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanFile", b =>
                {
                    b.Property<int>("LoanFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanFileId"), 1L, 1);

                    b.Property<string>("ActualFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("LoanFileId");

                    b.ToTable("LoanFiles");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanGuarantor", b =>
                {
                    b.Property<int>("LoanGuarantorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanGuarantorId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuarantorId")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("LoanGuarantorId");

                    b.ToTable("loanGuarantors");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanInterestPeriod", b =>
                {
                    b.Property<int>("LoanInterestPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanInterestPeriodId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanInterestPeriodId");

                    b.ToTable("loanInterestPeriods");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanPenalty", b =>
                {
                    b.Property<int>("LoanPenaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanPenaltyId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<int>("PenaltyId")
                        .HasColumnType("int");

                    b.HasKey("LoanPenaltyId");

                    b.ToTable("LoanPenalties");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanProduct", b =>
                {
                    b.Property<int>("LoanProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanProductId"), 1L, 1);

                    b.Property<string>("CalculateInterestOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cash")
                        .HasColumnType("bit");

                    b.Property<bool>("Cheque")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefaultLoanDuration")
                        .HasColumnType("int");

                    b.Property<float>("DefaultLoanInterestRate")
                        .HasColumnType("real");

                    b.Property<int>("DefaultNumberOfRePayments")
                        .HasColumnType("int");

                    b.Property<float>("DefaultPrincipalAmount")
                        .HasColumnType("real");

                    b.Property<int?>("DisbursementMethodId")
                        .HasColumnType("int");

                    b.Property<int>("DurationAfterMaturity")
                        .HasColumnType("int");

                    b.Property<bool>("ExtendAfterMaturity")
                        .HasColumnType("bit");

                    b.Property<float>("FirstRepaymentAmount")
                        .HasColumnType("real");

                    b.Property<bool>("InterestIsFixedAmountPerCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("InterestIsPercentageBased")
                        .HasColumnType("bit");

                    b.Property<int?>("InterestMethodId")
                        .HasColumnType("int");

                    b.Property<float>("InterestRateAfterMaturity")
                        .HasColumnType("real");

                    b.Property<int?>("LoanDurationId")
                        .HasColumnType("int");

                    b.Property<int?>("LoanInterestPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("LoanScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaturityInterestIsFixedAmount")
                        .HasColumnType("bit");

                    b.Property<bool>("MaturityInterestIsPercentageBased")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumLoanDuration")
                        .HasColumnType("int");

                    b.Property<float>("MaximumLoanInterestRate")
                        .HasColumnType("real");

                    b.Property<int>("MaximumNumberOfRepayments")
                        .HasColumnType("int");

                    b.Property<float>("MaximumPrincipalAmount")
                        .HasColumnType("real");

                    b.Property<int>("MinimumLoanDuration")
                        .HasColumnType("int");

                    b.Property<float>("MinimumLoanInterestRate")
                        .HasColumnType("real");

                    b.Property<int>("MinimumNumberOfRePayments")
                        .HasColumnType("int");

                    b.Property<float>("MinimumPrincipalAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnlineTransfer")
                        .HasColumnType("bit");

                    b.Property<float>("OverrideRepaymentAmountTo")
                        .HasColumnType("real");

                    b.Property<int>("PastMaturityLoanStatus")
                        .HasColumnType("int");

                    b.Property<bool>("ProRataInterestCalculation")
                        .HasColumnType("bit");

                    b.Property<int>("RecurringPeriodAfterMaturity")
                        .HasColumnType("int");

                    b.Property<int?>("RepaymentCycleId")
                        .HasColumnType("int");

                    b.Property<string>("RepaymentOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("lastRepaymentAmount")
                        .HasColumnType("real");

                    b.HasKey("LoanProductId");

                    b.HasIndex("DisbursementMethodId");

                    b.HasIndex("InterestMethodId");

                    b.HasIndex("LoanDurationId");

                    b.HasIndex("LoanInterestPeriodId");

                    b.HasIndex("RepaymentCycleId");

                    b.ToTable("LoanProducts");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanProductBranch", b =>
                {
                    b.Property<int>("LoanProductBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanProductBranchId"), 1L, 1);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanProductId")
                        .HasColumnType("int");

                    b.HasKey("LoanProductBranchId");

                    b.HasIndex("BranchId");

                    b.HasIndex("LoanProductId");

                    b.ToTable("LoanProductBranches");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanStatus", b =>
                {
                    b.Property<int>("LoanStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanStatusId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanStatusId");

                    b.ToTable("LoanStatuses");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("SubText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("LoanMgt.SHARED.OtherIncomeType", b =>
                {
                    b.Property<int>("OtherIncomeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtherIncomeTypeId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtherIncomeTypeId");

                    b.ToTable("OtherIncomeTypes");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Penalty", b =>
                {
                    b.Property<int>("PenaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PenaltyId"), 1L, 1);

                    b.Property<string>("CalculateOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EnableAfterMaturity")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FixedAmount")
                        .HasColumnType("bit");

                    b.Property<int>("GracePeriod")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<string>("LoanScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaturityCalculateOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MaturityFixedAmount")
                        .HasColumnType("bit");

                    b.Property<int>("MaturityGracePeriod")
                        .HasColumnType("int");

                    b.Property<string>("MaturityLoanScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MaturityPenaltyInterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("MaturityPercentageBased")
                        .HasColumnType("bit");

                    b.Property<float>("MaturityRecurringPenaltyInterestRate")
                        .HasColumnType("real");

                    b.Property<int>("MaturityRecurringPeriod")
                        .HasColumnType("int");

                    b.Property<int>("MaturityRecurringPeriodType")
                        .HasColumnType("int");

                    b.Property<bool>("MaturityWaivePenaltyOnHolidays")
                        .HasColumnType("bit");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<bool>("PercentageBased")
                        .HasColumnType("bit");

                    b.Property<float>("RecurringPenaltyInterestRate")
                        .HasColumnType("real");

                    b.Property<int>("RecurringPeriod")
                        .HasColumnType("int");

                    b.Property<int>("RecurringPeriodType")
                        .HasColumnType("int");

                    b.Property<bool>("WaivePenaltyOnHolidays")
                        .HasColumnType("bit");

                    b.HasKey("PenaltyId");

                    b.ToTable("Penalties");
                });

            modelBuilder.Entity("LoanMgt.SHARED.PenaltyLoanStatus", b =>
                {
                    b.Property<int>("PenaltyLoanStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PenaltyLoanStatusId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PenaltyId")
                        .HasColumnType("int");

                    b.HasKey("PenaltyLoanStatusId");

                    b.ToTable("PenaltyLoanStatuses");
                });

            modelBuilder.Entity("LoanMgt.SHARED.PersonDetails", b =>
                {
                    b.Property<int>("PersonDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonDetailsId"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryOfbirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.Property<string>("TownOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonDetailsId");

                    b.HasIndex("CountryId");

                    b.HasIndex("GenderId");

                    b.HasIndex("TitleId");

                    b.HasIndex("TownId");

                    b.ToTable("PersonDetails");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("LoanMgt.SHARED.RepaymentCycle", b =>
                {
                    b.Property<int>("RepaymentCycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepaymentCycleId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FixedDates")
                        .HasColumnType("bit");

                    b.Property<bool>("FixedDays")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ManualDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.HasKey("RepaymentCycleId");

                    b.ToTable("RepaymentCycles");
                });

            modelBuilder.Entity("LoanMgt.SHARED.RepaymentOrder", b =>
                {
                    b.Property<int>("RepaymentOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepaymentOrderId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeeId")
                        .HasColumnType("int");

                    b.Property<int>("LoanProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("RepaymentOrderId");

                    b.ToTable("RepaymentOrder");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Sequence", b =>
                {
                    b.Property<int>("SequenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SequenceId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeqNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.HasKey("SequenceId");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("LoanMgt.SHARED.StaffDailyReports", b =>
                {
                    b.Property<int>("StaffDailyReportsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDailyReportsId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StaffDailyReportsId");

                    b.ToTable("StaffDailyReports");
                });

            modelBuilder.Entity("LoanMgt.SHARED.StaffWeeklyReports", b =>
                {
                    b.Property<int>("StaffWeeklyReportsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffWeeklyReportsId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StaffWeeklyReportsId");

                    b.ToTable("StaffWeeklyReports");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("LoanMgt.SHARED.TaxType", b =>
                {
                    b.Property<int>("TaxTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxTypeId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TaxPercentage")
                        .HasColumnType("bigint");

                    b.HasKey("TaxTypeId");

                    b.ToTable("TaxTypes");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Town", b =>
                {
                    b.Property<int>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TownId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("TownId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BatchRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Debit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reconciled")
                        .HasColumnType("bit");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<string>("TaxMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.HasIndex("BranchId");

                    b.HasIndex("TaxTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("LoanMgt.SHARED.TransactionCode", b =>
                {
                    b.Property<int>("TransactionCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionCodeId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionCodeId");

                    b.HasIndex("CreditAccountId");

                    b.HasIndex("DebitAccountId");

                    b.ToTable("TransactionCodes");
                });

            modelBuilder.Entity("LoanMgt.SHARED.TransactionDetails", b =>
                {
                    b.Property<int>("TransactionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionDetailsId"), 1L, 1);

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BatchRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Debit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reconciled")
                        .HasColumnType("bit");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<string>("TaxMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionCodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionDetailsId");

                    b.HasIndex("BranchId");

                    b.HasIndex("TaxTypeId");

                    b.HasIndex("TransactionCodeId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionDetails");
                });

            modelBuilder.Entity("LoanMgt.SHARED.UserSession", b =>
                {
                    b.Property<int>("UserSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSessionId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserSessionId");

                    b.HasIndex("UserId1");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("LoanMgt.SHARED.WorkingStatus", b =>
                {
                    b.Property<int>("WorkingStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkingStatusId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkingStatusId");

                    b.ToTable("WorkingStatuses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LoanMgt.SHARED.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("BranchId");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Account", b =>
                {
                    b.HasOne("LoanMgt.SHARED.AccountType", "AccountType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Borrower", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("LoanMgt.SHARED.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("LoanMgt.SHARED.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId");

                    b.HasOne("LoanMgt.SHARED.Town", "Town")
                        .WithMany()
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.WorkingStatus", "WorkingStatus")
                        .WithMany()
                        .HasForeignKey("WorkingStatusId");

                    b.Navigation("Gender");

                    b.Navigation("Province");

                    b.Navigation("Status");

                    b.Navigation("Title");

                    b.Navigation("Town");

                    b.Navigation("WorkingStatus");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BorrowerFile", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Borrower", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrower");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BorrowerGroup", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Borrower", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrower");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Branch", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Town", "Town")
                        .WithMany("Branches")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("LoanMgt.SHARED.BranchHoliday", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Collector", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Group", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Borrower", "GroupLeader")
                        .WithMany()
                        .HasForeignKey("GroupLeaderId");

                    b.Navigation("GroupLeader");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Loan", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Borrower", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.DisbursementMethod", "DisbursementMethod")
                        .WithMany()
                        .HasForeignKey("DisbursementMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.InterestMethod", "InterestMethod")
                        .WithMany()
                        .HasForeignKey("InterestMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.LoanDuration", "LoanDuration")
                        .WithMany()
                        .HasForeignKey("LoanDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.LoanProduct", "LoanProduct")
                        .WithMany()
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.LoanStatus", "LoanStatus")
                        .WithMany()
                        .HasForeignKey("LoanStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.RepaymentCycle", "RepaymentCycle")
                        .WithMany()
                        .HasForeignKey("RepaymentCycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrower");

                    b.Navigation("DisbursementMethod");

                    b.Navigation("InterestMethod");

                    b.Navigation("LoanDuration");

                    b.Navigation("LoanProduct");

                    b.Navigation("LoanStatus");

                    b.Navigation("RepaymentCycle");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanProduct", b =>
                {
                    b.HasOne("LoanMgt.SHARED.DisbursementMethod", "DisbursementMethod")
                        .WithMany()
                        .HasForeignKey("DisbursementMethodId");

                    b.HasOne("LoanMgt.SHARED.InterestMethod", "InterestMethod")
                        .WithMany()
                        .HasForeignKey("InterestMethodId");

                    b.HasOne("LoanMgt.SHARED.LoanDuration", "LoanDuration")
                        .WithMany()
                        .HasForeignKey("LoanDurationId");

                    b.HasOne("LoanMgt.SHARED.LoanInterestPeriod", "LoanInterestPeriod")
                        .WithMany()
                        .HasForeignKey("LoanInterestPeriodId");

                    b.HasOne("LoanMgt.SHARED.RepaymentCycle", "RepaymentCycle")
                        .WithMany()
                        .HasForeignKey("RepaymentCycleId");

                    b.Navigation("DisbursementMethod");

                    b.Navigation("InterestMethod");

                    b.Navigation("LoanDuration");

                    b.Navigation("LoanInterestPeriod");

                    b.Navigation("RepaymentCycle");
                });

            modelBuilder.Entity("LoanMgt.SHARED.LoanProductBranch", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.LoanProduct", "LoanProduct")
                        .WithMany()
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("LoanMgt.SHARED.PersonDetails", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Town", "Town")
                        .WithMany()
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Gender");

                    b.Navigation("Title");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Province", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Town", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Province", "Province")
                        .WithMany("Towns")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Transaction", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.TaxType", "TaxType")
                        .WithMany()
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("TaxType");
                });

            modelBuilder.Entity("LoanMgt.SHARED.TransactionCode", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Account", "CreditAccount")
                        .WithMany()
                        .HasForeignKey("CreditAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Account", "DebitAccount")
                        .WithMany()
                        .HasForeignKey("DebitAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditAccount");

                    b.Navigation("DebitAccount");
                });

            modelBuilder.Entity("LoanMgt.SHARED.TransactionDetails", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.TaxType", "TaxType")
                        .WithMany()
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.TransactionCode", "TransactionCode")
                        .WithMany()
                        .HasForeignKey("TransactionCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanMgt.SHARED.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("TaxType");

                    b.Navigation("Transaction");

                    b.Navigation("TransactionCode");
                });

            modelBuilder.Entity("LoanMgt.SHARED.UserSession", b =>
                {
                    b.HasOne("LoanMgt.SHARED.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanMgt.SHARED.User", b =>
                {
                    b.HasOne("LoanMgt.SHARED.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("LoanMgt.SHARED.AccountType", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Province", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("LoanMgt.SHARED.Town", b =>
                {
                    b.Navigation("Branches");
                });
#pragma warning restore 612, 618
        }
    }
}
