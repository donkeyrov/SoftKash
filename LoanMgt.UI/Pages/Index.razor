
@page "/"
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper

@using System;
@using System.Collections.Generic;
@using System.ComponentModel.DataAnnotations;
@using System.Linq;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Authentication;

@using Microsoft.AspNetCore.Identity.UI.Services;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Logging;


<style>
    body {
        background: #f7f7f7;
        height: 100%;
    }
    .login-form {
        width: 340px;
        margin: 100px auto;
        font-size: 15px;
    }
    .login-form form {
        margin-bottom: 15px;
        background: #ffffff;
        box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.3);
        padding: 30px;
    }
    .form-control, .btn {
        min-height: 38px;
        border-radius: 2px;
    }
    .btn {
        font-size: 15px;
        font-weight: bold;
        color: #fff;
        background-color: #1b6ec2;
        border-color: #1861ac;
    }
    .login-form .title {
        font-size: 20px;
        font-weight: 700;
        font-family: verdana;
    }
</style>


@if(processing)
{
<div class="row">
      <div class="loader">
          <img src="/images/loadingimage.gif">
      </div>
  </div>
}
@code
{
    SHARED.User user = new SHARED.User();
    private bool processing = false;

    private LoginModel<IdentityUser> Model { get; set; } = new LoginModel<IdentityUser>();

    protected override async void OnInitialized()
    {
        // Clear the existing external cookie to ensure a clean login process
        // await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        processing = true;
        UriHelper.NavigateTo("/Identity/Account/Login",true);
    }

    
}

