@page "/taxtypes"
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper
@inherits OwningComponentBase<TaxTypeRepository>


<h3>Tax Types</h3>
<div class="admin-link">
    <NavLink href="/admin">Back to Admin</NavLink>
</div>
<div class="new-border3 blue-top">
    <div style="margin-bottom:10px;">
        <button class="btn btn-primary oi oi-plus" @onclick="()=>openModal(true)"> Add New Record</button>
    </div>

    <br />
    @if (popup)
    {
        <div class="modal modal2" tabindex="-1" style="display:block;">
            <div class="modal-dialog modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        @if (taxType.TaxTypeId > 0)
                        {
                            <h5 class="modal-title">Edit Tax Type</h5>
                        }
                        else
                        {
                            <h5 class="modal-title">Add New Tax Type</h5>
                        }

                    </div>
                    <EditForm Model="taxType" OnValidSubmit="@Process">
                        <div class="modal-body">
                            <DataAnnotationsValidator/>
                            <ValidationSummary/>
                            <div>
                                <div class="space">
                                    <label for="taxcode">Tax Type Code</label>
                                    <InputText @bind-Value="taxType.Code" placeholder="Tax Type Code" id="taxcode" name="taxcode" class="form-control" />
                                </div>

                                <div class="space">
                                    <label for="desc">Tax Type Name</label>
                                    <InputText @bind-Value="taxType.Description" placeholder="Tax Type Name" id="desc" name="desc" class="form-control"/>
                                </div>
                                <div class="space">
                                    <label for="percent">Tax Percentage</label>
                                    <InputNumber @bind-Value="taxType.TaxPercentage" placeholder="Tax Percentage" id="percent" name="percent " class="form-control"/>
                                </div>
                                
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="closeModal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

    }

    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <SfGrid DataSource="@taxTypes" Toolbar="@(new List<string>() { "Search" })" AllowPaging="true">
                    <GridColumns>
                        <GridColumn Field=@nameof(taxType.Code) HeaderText="Tax Type Code"></GridColumn>
                        <GridColumn Field=@nameof(taxType.Description) HeaderText="Tax Type Name"></GridColumn>
                        <GridColumn Field=@nameof(taxType.TaxPercentage) HeaderText="Tax Pecentage"></GridColumn>
                        
                        <GridColumn MaxWidth="70">
                            <Template>
                                @{
                                    var rType = (context as LoanMgt.SHARED.TaxType);
                                    <SfButton @onclick="@(() => EditRecord(rType))" IsToggle="true" IconCss="oi oi-pencil" CssClass="e-warning e-small">Edit</SfButton>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn MaxWidth="70">
                            <Template>
                                @{
                                    var rType = (context as LoanMgt.SHARED.TaxType);
                                    <SfButton @onclick="@(() => ShowDelete(rType))" IsToggle="true" IconCss="oi oi-trash" CssClass="e-danger e-small">Delete</SfButton>
                                }
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>
    </div>
</div>
<Dialog Title="@title" showModal="@showModal" modalType="@modalType"
        OnClickCallback="@(()=> DeletetRecord(taxType))">
    @childContent
</Dialog>
@code {
    private LoanMgt.SHARED.TaxType taxType = new LoanMgt.SHARED.TaxType();
    private IEnumerable<LoanMgt.SHARED.TaxType> taxTypes { get; set; } = new List<LoanMgt.SHARED.TaxType>();

    private bool showModal = false;
    private string title = "Default Title";
    private string childContent = "Default Message";
    private Component.ModalTypes modalType = Component.ModalTypes.Confirm;
    private int taxTypeId = 0;
    private bool popup = false;    

    protected override void OnInitialized()
    {
        taxTypes = Service.GetAll();
    }

    protected void Process()
    {
        closeModal();

        if (string.IsNullOrEmpty(taxType.TaxTypeId.ToString()) || taxType.TaxTypeId == 0)
        {
            Service.Add(taxType);
            toastService.ShowSuccess("Tax type has been created", "System Information");
        }
        else
        {
            Service.Update(taxType);
            toastService.ShowInfo("Tax type has been updated!", "System Information");
        }

        taxType = new LoanMgt.SHARED.TaxType();
        taxTypes = Service.GetAll();
    }

    private void ShowDelete(LoanMgt.SHARED.TaxType rType)
    {
        taxTypeId = rType.TaxTypeId;
        taxType = rType;
        modalType = Component.ModalTypes.Delete;
        title = "Delete Record";
        childContent = "Do You Want To Delete This Record(" + taxType.Description + ")?";
        showModal = true;
    }

    protected void EditRecord(LoanMgt.SHARED.TaxType rType)
    {
        taxType = rType;
        openModal();
    }

    protected void DeletetRecord(LoanMgt.SHARED.TaxType rType)
    {
        showModal = false;
        Service.Remove(rType);

        taxTypeId = 0;
        taxType = new LoanMgt.SHARED.TaxType();
        taxTypes = Service.GetAll();

        toastService.ShowWarning("Tax type has been Deleted", "System Information");
    }

    void openModal(bool reset = false)
    {
        if (reset == true)
            taxType = new SHARED.TaxType();

        popup = true;
    }

    void closeModal()
    {
        popup = false;
    }
}
