@page "/viewallloans" 
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper
@inject LoanProductRepository loanProductRepo;
@inject BorrowerRepository borrowerRepo;
@inherits OwningComponentBase<LoanRepository>

<h3>View All Loans</h3>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@loans" Toolbar="@(new List<string>() { "Search" })" AllowPaging="true">
                <GridColumns>
                    <GridColumn Field=@nameof(loan.LoanNumber) HeaderText="Loan Number"></GridColumn>
                    <GridColumn Field=@nameof(loan.LoanTitle) HeaderText="Laon Title" TextAlign="TextAlign.Left" ></GridColumn>
                    <GridColumn Field=@nameof(loan.Description) HeaderText="Description" TextAlign="TextAlign.Left" ></GridColumn>
                    <GridColumn Field=@nameof(loan.PrincipalAmount) HeaderText="Principal Amt"></GridColumn>
                    
                    <GridForeignColumn Field=@nameof(loan.BorrowerId) HeaderText="First Name" TextAlign="TextAlign.Left" ForeignKeyValue="Firstname" Format="d" ForeignDataSource="@borrowers" ></GridForeignColumn>
                    <GridForeignColumn Field=@nameof(loan.BorrowerId) HeaderText="Last Name" TextAlign="TextAlign.Left" ForeignKeyValue="Lastname" Format="d" ForeignDataSource="@borrowers" ></GridForeignColumn>
                    <GridForeignColumn Field=@nameof(loan.BorrowerId) HeaderText="Business Name" TextAlign="TextAlign.Left" ForeignKeyValue="BusinessName" Format="d" ForeignDataSource="@borrowers" ></GridForeignColumn>

                    <GridColumn>
                        <Template>
                            @{
                                var mLoan = (context as LoanMgt.SHARED.Loan);
                                
                                @if(mLoan.LoanStatusId == 2)
                                {
                                    <SfButton @onclick="@((args) => EditRecord(args,mLoan))" IsToggle="true" CssClass="e-success e-small">View</SfButton>
                                }
                                else
                                {
                                    <SfButton @onclick="@((args) => EditRecord(args,mLoan))" IsToggle="true" CssClass="e-warn e-small">Approve</SfButton>
                                }
                                
                            }
                        </Template>
                    </GridColumn>

                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code {
    private LoanMgt.SHARED.Loan loan = new LoanMgt.SHARED.Loan();
    private IEnumerable<LoanMgt.SHARED.Loan> loans { get; set; } = new List<LoanMgt.SHARED.Loan>();
    private IEnumerable<LoanMgt.SHARED.LoanProduct> loanProducts { get; set; } = new List<LoanMgt.SHARED.LoanProduct>();
    private IEnumerable<LoanMgt.SHARED.Borrower> borrowers { get; set; } = new List<LoanMgt.SHARED.Borrower>();

    protected override void OnInitialized()
    {
        loans = Service.GetAll().Where(l=> (l.LoanStatusId == 2 || (l.LoanStatusId == 1 && l.ApproverStage == 1) ) && l.Closed == false).ToList();
        borrowers = borrowerRepo.GetAll();
        loanProducts = loanProductRepo.GetAll();
    }

    protected void EditRecord(Microsoft.AspNetCore.Components.Web.MouseEventArgs args, LoanMgt.SHARED.Loan myLoan)
    {
        UriHelper.NavigateTo("/addloan/"+ myLoan.LoanId);
    }
}
