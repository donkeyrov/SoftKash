@page "/loaninterestperiod"
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper
@inherits OwningComponentBase<LoanInterestPeriodRepository>

<h3>Loan Interest Period</h3>

<div class="admin-link">
    <NavLink href="/admin">Back to Admin</NavLink>
</div>
<div class="new-border3 blue-top">    
    <div style="margin-bottom:10px;">
        <button class="btn btn-primary oi oi-plus" @onclick="()=>openModal(true)"> Add New Record</button>
    </div>

    <br />
    @if (popup)
    {
        <div class="modal modal2" tabindex="-1" style="display:block;">
            <div class="modal-dialog modal-dialog2 modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        @if (loanInterestPeriod.LoanInterestPeriodId > 0)
                        {
                            <h5 class="modal-title">Edit Loan Interest Period</h5>
                        }
                        else
                        {
                            <h5 class="modal-title">Add New Loan Interest Period</h5>
                        }

                    </div>
                    <EditForm Model="loanInterestPeriod" OnValidSubmit="@Process">
                        <div class="modal-body modal-body2">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="row col-lg-12 col-md-12">
                                <div class="col-lg-4 col-md-4">
                                    <label>Loan Interest Period Code</label>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <InputText @bind-Value="loanInterestPeriod.Code" placeholder="Code" id="loanInterestPeriodCode" name="loanInterestPeriodoCode" class="form-control" />
                                </div>
                            </div>
                            <br />
                            <div class="row col-lg-12 col-md-12">
                                <div class="col-lg-4 col-md-4">
                                    <label>Loan Interest Period Description</label>
                                </div>
                                <div class="col-lg-7 col-md-7">
                                    <InputText @bind-Value="loanInterestPeriod.Description" placeholder="Description" id="loanInterestPeriodDescription" name="loanInterestPeriodDescription" class="form-control" />
                                </div>
                            </div>
                            <br />                            
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="closeModal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

    }

    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <SfGrid DataSource="@loanInterestPeriods" Toolbar="@(new List<string>() { "Search" })" AllowPaging="true">
                    <GridColumns>
                        <GridColumn Field=@nameof(loanInterestPeriod.Code) HeaderText="Code"></GridColumn>
                        <GridColumn Field=@nameof(loanInterestPeriod.Description) HeaderText="Description"></GridColumn>
                        
                        <GridColumn>
                            <Template>
                                @{
                                    var rType = (context as LoanMgt.SHARED.LoanInterestPeriod);
                                    <SfButton @onclick="@(() => EditRecord(rType))" IsToggle="true" IconCss="oi oi-pencil" CssClass="e-warning e-small">Edit</SfButton>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn>
                            <Template>
                                @{
                                    var rType = (context as LoanMgt.SHARED.LoanInterestPeriod);
                                    <SfButton @onclick="@(() => ShowDelete(rType))" IsToggle="true" IconCss="oi oi-trash" CssClass="e-danger e-small">Delete</SfButton>
                                }
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>
    </div>
</div>
<Dialog Title="@title" showModal="@showModal" modalType="@modalType"
        OnClickCallback="@(()=> DeletetRecord(loanInterestPeriod))">
    @childContent
</Dialog>
@code {
    private LoanMgt.SHARED.LoanInterestPeriod loanInterestPeriod = new LoanMgt.SHARED.LoanInterestPeriod();
    private IEnumerable<LoanMgt.SHARED.LoanInterestPeriod> loanInterestPeriods { get; set; } = new List<LoanMgt.SHARED.LoanInterestPeriod>();

    private bool showModal = false;
    private string title = "Default Title";
    private string childContent = "Default Message";
    private Component.ModalTypes modalType = Component.ModalTypes.Confirm;
    private int loanInterestPeriodId = 0;
    public string applyRepaymentType { get; set; } = "False";
    private bool popup = false;

    protected override void OnInitialized()
    {
        loanInterestPeriods = Service.GetAll();

    }

    protected void Process()
    {
        closeModal();
                
        if (string.IsNullOrEmpty(loanInterestPeriod.LoanInterestPeriodId.ToString()) || loanInterestPeriod.LoanInterestPeriodId == 0)
        {
            loanInterestPeriod.CreatedDate = DateTime.Now;
            loanInterestPeriod.CreatedBy = "USER";
            Service.Add(loanInterestPeriod);
            toastService.ShowSuccess("Loan Interest Period has been created", "System Information");
        }
        else
        {
            Service.Update(loanInterestPeriod);
            toastService.ShowInfo("Loan Interest Period has been updated!", "System Information");
        }

        loanInterestPeriod = new LoanMgt.SHARED.LoanInterestPeriod();
        loanInterestPeriods = Service.GetAll();
    }

    private void ShowDelete(LoanMgt.SHARED.LoanInterestPeriod rType)
    {
        loanInterestPeriodId = rType.LoanInterestPeriodId;
        loanInterestPeriod = rType;
        modalType = Component.ModalTypes.Delete;
        title = "Delete Record";
        childContent = "Do You Want To Delete This Record(" + loanInterestPeriod.Description + ")?";
        showModal = true;
    }

    protected void EditRecord(LoanMgt.SHARED.LoanInterestPeriod rType)
    {
        loanInterestPeriod = rType;        
        openModal();
    }

    protected void DeletetRecord(LoanMgt.SHARED.LoanInterestPeriod rType)
    {
        showModal = false;
        Service.Remove(rType);

        loanInterestPeriodId = 0;
        loanInterestPeriod = new LoanMgt.SHARED.LoanInterestPeriod();
        loanInterestPeriods = Service.GetAll();

        toastService.ShowWarning("Loan interest period has been Deleted", "System Information");
    }

    void openModal(bool reset = false)
    {
        if (reset == true)
            loanInterestPeriod = new SHARED.LoanInterestPeriod();

        popup = true;
    }

    void closeModal()
    {
        popup = false;
    }
}