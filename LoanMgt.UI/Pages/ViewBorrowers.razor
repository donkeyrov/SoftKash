@page "/viewborrowers"
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper
@inherits OwningComponentBase<BorrowerRepository>

<h3>View Borrowers (@borrowers.Count() records)</h3>
0
111110110<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            
            <SfGrid ID="Grid" @ref="Grid" DataSource="@borrowers" AllowExcelExport=true AllowPdfExport="true" 
            Toolbar="@(new List<string>() { "ExcelExport","CsvExport","Search" })"  AllowPaging=true AllowMultiSorting=true >
                <GridEvents OnToolbarClick="ToolbarClick" TValue="LoanMgt.SHARED.Borrower"></GridEvents>
                <GridColumns>
                    <GridColumn Field=@nameof(borrower.Firstname) HeaderText="Firstname" TextAlign="TextAlign.Left" ></GridColumn>
                    <GridColumn Field=@nameof(borrower.Lastname) HeaderText="Lastname" TextAlign="TextAlign.Left" ></GridColumn>
                    <GridColumn Field=@nameof(borrower.BusinessName) HeaderText="Business Name"></GridColumn>
                    <GridColumn Field=@nameof(borrower.NRC) HeaderText="NRC"></GridColumn>
                    <GridColumn Field=@nameof(borrower.Email) HeaderText="Email"></GridColumn>
                    <GridColumn Field=@nameof(borrower.Address) HeaderText="Address" TextAlign="TextAlign.Left" ></GridColumn>
                    <GridColumn>
                        <Template>
                            @{
                                var mBorrower = (context as LoanMgt.SHARED.Borrower);
                                <SfButton @onclick="@((args) => EditRecord(args,mBorrower))" IsToggle="true" CssClass="e-success e-small">Settings</SfButton>
                            }
                        </Template>
                    </GridColumn>

                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code {
    private LoanMgt.SHARED.Borrower borrower = new LoanMgt.SHARED.Borrower();
    private IEnumerable<LoanMgt.SHARED.Borrower> borrowers { get; set; } = new List<LoanMgt.SHARED.Borrower>();
    SfGrid<LoanMgt.SHARED.Borrower> Grid;

    protected override void OnInitialized()
    {
        borrowers = Service.GetAll();
     
    }

    protected void EditRecord(Microsoft.AspNetCore.Components.Web.MouseEventArgs args, LoanMgt.SHARED.Borrower myBorrower)
    {
        UriHelper.NavigateTo("/addborrower/"+ myBorrower.BorrowerId);
    }

    public void ToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_pdfexport")
        {
           this.Grid.PdfExport();
        }
        else if (args.Item.Id == "Grid_excelexport")
        {
           this.Grid.ExcelExport();
        }
        else
        {
           this.Grid.CsvExport();
        }
    }
}
